{"version":3,"file":"component---src-pages-topic-assigner-js-c8dddc538c3bc325dedf.js","mappings":"2NAAO,MACMA,EAAW,qC,cCqFxB,MAnFsBC,KACpB,MAAM,EAACC,EAAW,EAACC,IAAiBC,EAAAA,EAAAA,UAAS,KACvC,EAACC,EAAY,EAACC,IAAkBF,EAAAA,EAAAA,UAAS,KACzC,EAACG,EAAY,EAACC,IAAkBJ,EAAAA,EAAAA,UAAS,SACzC,EAACK,EAAQ,EAACC,IAAcN,EAAAA,EAAAA,UAAS,IA4BvC,OACEO,EAAAA,EAAAA,MAAA,OAAKC,UDpCW,4CCoCSC,SAAA,EACvBF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,UAELC,EAAAA,EAAAA,KAAA,YACEF,UAAWG,EACXC,KAAK,IACLC,MAAOf,EACPgB,SAAWC,GAAMhB,EAAcgB,EAAEC,OAAOH,aAI5CN,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,WAELC,EAAAA,EAAAA,KAAA,YACEF,UAAWG,EACXC,KAAK,IACLC,MAAOZ,EACPa,SAAWC,GAAMb,EAAea,EAAEC,OAAOH,aAI7CN,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,oBAELF,EAAAA,EAAAA,MAAA,UACEC,UD1DY,qCC2DZK,MAAOV,EACPW,SAAWC,GAAMX,EAAeW,EAAEC,OAAOH,OAAOJ,SAAA,EAEhDC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,OAAMJ,SAAC,sBACrBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,UAASJ,SAAC,+BAI5BC,EAAAA,EAAAA,KAAA,UAAQF,UDlEQ,2CCkEeS,QA5DdC,KACnB,MAAMC,EAAQrB,EACXsB,MAAM,SACNC,KAAKC,GAAMA,EAAEC,SACbC,QAAQF,GAAMA,IACXG,EAASxB,EACZmB,MAAM,SACNC,KAAKK,GAAMA,EAAEH,SACbC,QAAQE,GAAMA,IACXC,EAAW,IAAIC,IACfC,EAASV,EAAME,KAAKS,IACxB,IAAIC,EACJ,GAAoB,SAAhB5B,EACF4B,EAAQN,EAAOO,KAAKC,MAAMD,KAAKE,SAAWT,EAAOU,aAC5C,CACL,MAAMC,EAAYX,EAAOD,QAAQE,IAAOC,EAASU,IAAIX,KACrDK,EAAQK,EAAUD,OACdC,EAAUJ,KAAKC,MAAMD,KAAKE,SAAWE,EAAUD,SAC/C,oBACJR,EAASW,IAAIP,EACf,CACA,MAAO,CAAED,OAAMC,QAAO,IAExBzB,EAAWuB,EAAO,EAqCqCpB,SAAC,kBAIrDJ,EAAQ8B,OAAS,IAChBzB,EAAAA,EAAAA,KAAA,MAAIF,UDtEc,eCsEYC,SAC3BJ,EAAQgB,KAAI,CAAAkB,EAAkBC,KAAG,IAApB,KAAEV,EAAI,MAAEC,GAAOQ,EAAA,OAC3BhC,EAAAA,EAAAA,MAAA,MAAcC,UDvEA,oBCuE0BC,SAAA,CACrCqB,EAAK,MAAIC,IADHS,EAEJ,QAIP,EChEV,IChBA,EDG0BC,KACxBlC,EAAAA,EAAAA,MAAAmC,EAAAA,SAAA,CAAAjC,SAAA,EACEC,EAAAA,EAAAA,KAACiC,EAAAA,EAAO,CACNC,MAAM,uCACNC,YAAY,oFAEdtC,EAAAA,EAAAA,MAACuC,EAAAA,EAAM,CAAArC,SAAA,EACLC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,gBAAeC,SAAC,2BAC9BC,EAAAA,EAAAA,KAACb,EAAa,S","sources":["webpack://gatsby-starter-hello-world/./src/modules/TopicAssigner/cls.js","webpack://gatsby-starter-hello-world/./src/modules/TopicAssigner/TopicAssigner.js","webpack://gatsby-starter-hello-world/./src/modules/TopicAssigner/index.js","webpack://gatsby-starter-hello-world/./src/pages/topic-assigner.js"],"sourcesContent":["export const form = \"bg-near-white pa4 br3 shadow-1 mw7 center\"\r\nexport const textarea = \"w-100 pa2 br2 ba b--light-gray mt2\"\r\nexport const select = \"w-100 pa2 br2 ba b--light-gray mt3\"\r\nexport const button = \"mt3 br2 ph3 pv2 bg-blue white bn pointer\"\r\nexport const resultList = \"list pl0 mt4\"\r\nexport const resultItem = \"lh-copy dark-gray\"\r\n","import React, { useState } from \"react\"\r\nimport * as cls from \"./cls\"\r\n\r\nconst TopicAssigner = () => {\r\n  const [namesInput, setNamesInput] = useState(\"\")\r\n  const [topicsInput, setTopicsInput] = useState(\"\")\r\n  const [replacement, setReplacement] = useState(\"with\")\r\n  const [results, setResults] = useState([])\r\n\r\n  const assignTopics = () => {\r\n    const names = namesInput\r\n      .split(/[\\n,]/)\r\n      .map((n) => n.trim())\r\n      .filter((n) => n)\r\n    const topics = topicsInput\r\n      .split(/[\\n,]/)\r\n      .map((t) => t.trim())\r\n      .filter((t) => t)\r\n    const assigned = new Set()\r\n    const output = names.map((name) => {\r\n      let topic\r\n      if (replacement === \"with\") {\r\n        topic = topics[Math.floor(Math.random() * topics.length)]\r\n      } else {\r\n        const available = topics.filter((t) => !assigned.has(t))\r\n        topic = available.length\r\n          ? available[Math.floor(Math.random() * available.length)]\r\n          : \"No topic assigned\"\r\n        assigned.add(topic)\r\n      }\r\n      return { name, topic }\r\n    })\r\n    setResults(output)\r\n  }\r\n\r\n  return (\r\n    <div className={cls.form}>\r\n      <label>\r\n        Names:\r\n        <textarea\r\n          className={cls.textarea}\r\n          rows=\"5\"\r\n          value={namesInput}\r\n          onChange={(e) => setNamesInput(e.target.value)}\r\n        />\r\n      </label>\r\n\r\n      <label>\r\n        Topics:\r\n        <textarea\r\n          className={cls.textarea}\r\n          rows=\"5\"\r\n          value={topicsInput}\r\n          onChange={(e) => setTopicsInput(e.target.value)}\r\n        />\r\n      </label>\r\n\r\n      <label>\r\n        Assignment Type:\r\n        <select\r\n          className={cls.select}\r\n          value={replacement}\r\n          onChange={(e) => setReplacement(e.target.value)}\r\n        >\r\n          <option value=\"with\">With Replacement</option>\r\n          <option value=\"without\">Without Replacement</option>\r\n        </select>\r\n      </label>\r\n\r\n      <button className={cls.button} onClick={assignTopics}>\r\n        Assign Topics\r\n      </button>\r\n\r\n      {results.length > 0 && (\r\n        <ul className={cls.resultList}>\r\n          {results.map(({ name, topic }, idx) => (\r\n            <li key={idx} className={cls.resultItem}>\r\n              {name} → {topic}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TopicAssigner\r\n","import React from \"react\"\r\nimport Layout from \"../../components/Layout\"\r\nimport SeoHead from \"../../components/SeoHead\"\r\nimport TopicAssigner from \"./TopicAssigner\"\r\n\r\nconst TopicAssignerPage = () => (\r\n  <>\r\n    <SeoHead\r\n      title=\"Random Topic Assigner – Jun Clemente\"\r\n      description=\"Paste names and topics, then randomly assign them with or without replacement.\"\r\n    />\r\n    <Layout>\r\n      <h1 className=\"f2 fw6 tc mb4\">Random Topic Assigner</h1>\r\n      <TopicAssigner />\r\n    </Layout>\r\n  </>\r\n)\r\n\r\nexport default TopicAssignerPage\r\n","import TopicAssigner from \"../modules/TopicAssigner\"\r\n\r\nexport default TopicAssigner\r\n"],"names":["textarea","TopicAssigner","namesInput","setNamesInput","useState","topicsInput","setTopicsInput","replacement","setReplacement","results","setResults","_jsxs","className","children","_jsx","cls","rows","value","onChange","e","target","onClick","assignTopics","names","split","map","n","trim","filter","topics","t","assigned","Set","output","name","topic","Math","floor","random","length","available","has","add","_ref","idx","TopicAssignerPage","_Fragment","SeoHead","title","description","Layout"],"sourceRoot":""}